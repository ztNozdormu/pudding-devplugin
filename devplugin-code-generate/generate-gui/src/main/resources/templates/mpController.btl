package ${package.Controller};

import org.springframework.web.bind.annotation.RequestMapping;

<% if(restControllerStyle){ %>
import org.springframework.web.bind.annotation.RestController;
<% }else{ %>
import org.springframework.stereotype.Controller;
<% } %>
<% if(isNotEmpty(superControllerClassPackage)){ %>
import ${superControllerClassPackage};
<% } %>
import ${package.Entity}.${entity};
import ${entity.servicePackage}.I${entity}Service;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * <p>
 * ${table.comment!} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Api(description = "${entity.description}管理接口")
<% if(restControllerStyle){ %>
@RestController
<% }else{ %>
@Controller
<% } %>
@RequestMapping("<% if(isNotEmpty(package.ModuleName)){ %>/${package.ModuleName}<% } %>/<% if(isNotEmpty(controllerMappingHyphenStyle)){ %>${controllerMappingHyphen}<% }else{ %>${table.entityPath}<% } %>")
<% if(kotlin){ %>
class ${table.controllerName}<% if(isNotEmpty(superControllerClass)){ %> : ${superControllerClass}()<% } %>
<% }else{ %>
    <% if(isNotEmpty(superControllerClass)){ %>
public class ${table.controllerName} extends ${superControllerClass} {

    @Autowired
    private ${table.serviceName} i${table.serviceName};

    @RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
    @ApiOperation(value = "通过id获取")
    public ResponseData get(@PathVariable ${entity.primaryKeyType} id){

        ${entity} ${entityLowerCase} = i${entity}Service.getById(id);
        return ResponseData.success(${entityLowerCase});
    }

    @RequestMapping(value = "/getAll", method = RequestMethod.GET)
    @ApiOperation(value = "获取全部数据")
    public ResponseData getAll(){

        List<${entity}> list = i${entity}Service.list();
        return ResponseData.success(list);
    }

    @RequestMapping(value = "/getByPage", method = RequestMethod.GET)
    @ApiOperation(value = "分页获取")
    public ResponseData getByPage(@ModelAttribute PageVo page){

        IPage<${entity}> data = i${entity}Service.page(PageUtil.initMpPage(page));
        return ResponseData.success(data);
    }

    @RequestMapping(value = "/insertOrUpdate", method = RequestMethod.POST)
    @ApiOperation(value = "编辑或更新数据")
    public ResponseData saveOrUpdate(@ModelAttribute ${entity} ${entityLowerCase}){

        if(i${entity}Service.saveOrUpdate(${entityLowerCase})){
            return ResponseData.success(${entityLowerCase});
        }
        return ResponseData.error("操作失败");
    }

    @RequestMapping(value = "/delByIds/{ids}", method = RequestMethod.DELETE)
    @ApiOperation(value = "批量通过id删除")
    public ResponseData delAllByIds(@PathVariable ${entity.primaryKeyType}[] ids){

        for(${entity.primaryKeyType} id : ids){
            i${entity}Service.removeById(id);
        }
        return ResponseData.success("批量通过id删除数据成功");
    }
    <% }else{ %>
public class ${table.controllerName} {

 @Autowired
    private I${entity}Service i${entity}Service;

    @RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
    @ApiOperation(value = "通过id获取")
    public ResponseData get(@PathVariable ${entity.primaryKeyType} id){

        ${entity} ${entityLowerCase} = i${entity}Service.getById(id);
        return ResponseData.success(${entityLowerCase});
    }

    @RequestMapping(value = "/getAll", method = RequestMethod.GET)
    @ApiOperation(value = "获取全部数据")
    public ResponseData getAll(){

        List<${entity}> list = i${entity}Service.list();
        return ResponseData.success(list);
    }

    @RequestMapping(value = "/getByPage", method = RequestMethod.GET)
    @ApiOperation(value = "分页获取")
    public ResponseData getByPage(@ModelAttribute PageVo page){

        IPage<${entity}> data = i${entity}Service.page(PageUtil.initMpPage(page));
        return ResponseData.success(data);
    }

    @RequestMapping(value = "/insertOrUpdate", method = RequestMethod.POST)
    @ApiOperation(value = "编辑或更新数据")
    public ResponseData saveOrUpdate(@ModelAttribute ${entity} ${entityLowerCase}){

        if(i${entity}Service.saveOrUpdate(${entityLowerCase})){
            return ResponseData.success(${entityLowerCase});
        }
        return ResponseData.error("操作失败");
    }

    @RequestMapping(value = "/delByIds/{ids}", method = RequestMethod.DELETE)
    @ApiOperation(value = "批量通过id删除")
    public ResponseData delAllByIds(@PathVariable ${entity.primaryKeyType}[] ids){

        for(${entity.primaryKeyType} id : ids){
            i${entity}Service.removeById(id);
        }
        return ResponseData.success("批量通过id删除数据成功");
    }
    <% } %>

}
<% } %>

